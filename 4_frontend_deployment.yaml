-
    hosts: localhost
    vars_files:
        - external_vars.yaml
    vars:
        gcloud_creds_text: "{{ lookup('pipe', 'gcloud config config-helper --format=json') }}"
        gcloud_credentials: "{{ gcloud_creds_text | json_query('@') }}"
    tags: create
    tasks:
        -
            name: Gather cluster facts
            gcp_container_cluster_facts:
                project: "{{ gcp_project_id }}"
                auth_kind: serviceaccount
                service_account_file: "{{ gcp_cred_file }}"
                zone: "{{gcp_zone }}"
            register: clusters
        -
            set_fact:
                cluster: "{{ clusters['items'] | selectattr('name', 'match', cluster_name) | first  }}"
        -
            name: Create a Frontend deployment
            k8s:
                host: "https://{{ cluster.endpoint }}"
                ca_cert: "{{ cluster.masterAuth.clusterCaCertificate }}"
                #validate_certs: false
                api_key: "{{ gcloud_credentials.credential.access_token }}"
                namespace: "default"
                definition:
                    apiVersion: apps/v1
                    kind: Deployment
                    metadata:
                        name: frontend-server
                    spec:
                        replicas: 2
                        selector:
                            matchLabels:
                                app: "{{ app_name }}"
                                role: master
                                tier: frontend
                        template:
                            metadata:
                                labels:
                                    app: "{{ app_name }}"
                                    role: master
                                    tier: frontend
                            spec:
                                containers:
                                    -
                                        # https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.11/#container-v1-core
                                        name: frontend
                                        image: eu.gcr.io/networksandbox-232012/frontend
                                        resources:
                                            requests:
                                                cpu: 100m
                                                memory: 100Mi
                                        ports:
                                            -
                                                containerPort: 8080
            register: deployment
        -
            name: This is the deployment
            debug:
                var: deployment
        -
            name: Create a Frontend service
            k8s:
                host: "https://{{ cluster.endpoint }}"
                ca_cert: "{{ cluster.masterAuth.clusterCaCertificate }}"
                #validate_certs: false
                api_key: "{{ gcloud_credentials.credential.access_token }}"
                namespace: "default"
                definition:
                    apiVersion: v1
                    kind: Service
                    metadata:
                        name: frontend-service
                        labels:
                            app: "{{ app_name }}"
                            role: master
                            tier: frontend
                    spec:
                        type: LoadBalancer
                        #loadBalancerIP: "YOUR.IP.ADDRESS.HERE"
                        ports:
                        -
                            port: 8080
                            targetPort: 8080
                        selector:
                            app: "{{ app_name }}"
                            role: master
                            tier: frontend
            register: service
        -
            name: This is the service
            debug:
                var: service
        -
            name: Wait for the service external IP
            k8s_facts:
                host: "https://{{ cluster.endpoint }}"
                ca_cert: "{{ cluster.masterAuth.clusterCaCertificate }}"
                #validate_certs: false
                api_key: "{{ gcloud_credentials.credential.access_token }}"
                kind: Service
                field_selectors:
                    - metadata.name=frontend-service
            register: services
            until: "services.resources[0].status.loadBalancer.ingress[0].ip is defined"
            retries: 90
            delay: 5
        -
            set_fact:
                frontend_service_ip: "{{ services.resources[0].status.loadBalancer.ingress[0].ip }}"
        -
            name: This is the Frontend service IP
            debug:
                var: frontend_service_ip


# vim: set sw=4 ts=4 et indk= :
